小程序注册（开发文档）：
https://mp.weixin.qq.com/

扫码进入系统后，
可获取小程序id，小程序秘钥
申请获取定位，地址等权限
开通广告，支付等功能（需要商户号）

开发笔记：相关详细信息可上面网站中的参考开发文档

全局配置（根目录下app.json）
可进行page页面创建 tabbar导航栏配置，window标题栏配置等

页面配置（每个页面下的json文件）
可开启下拉刷新，加载样式设置，页面标题文字修改等

wxml语法：
页面中通过双括号“{{}}”可实现绑定js中data数据进行渲染

wx:for="{{arr}}"实现数组arr循环渲染（自带item和index变量，用来表示值和索引）
可通过 wx:for-item="" 和 wx:for-index="" 修改

wx:if="{{bool}}"实现条件渲染（还有wx:elif="{{bool2}}" 和 wx:else ）

bindtap="fn" 点击事件绑定（会冒泡）
catchtap="fn" 点击事件绑定（不冒泡）
事件通过 data-键="值" 的方式传值，同时js中通过 event 进行接收
event.target.dataset        接收底层元素上绑定的数据
event.currentTarget.dataset 接收当前元素上绑定的数据

wxss注意：
rpx单位会自己根据当前分辨率和750的做对比，自动换算 1rpx=?/750px


框架接口:

全局app对象：
根目录下的app.js文件有个App对象
用来存放数据和状态用，整个小程序的生命周期
获取存放的数据和状态，可用getApp()

局部page对象：
每个页面下的js文件中有个page对象
用来存放data数据，执行事件，页面的生命周期
导航页面切换时只显示和隐藏，不会卸载

组件：用来管理可复用模块
1 创建组件（在components中鼠标右键 新建Component）
2 配置页面中要使用组件（每个页面下json文件中配置"usingComponents"属性的值）
3 使用组件（在页面中通过标签名使用）

组件传值：
父传值：父级通过自定义属性，子级通过properties进行接收
子传父：
子级通过 this.triggerEvent("事件名",要传递的值) 创建自定义事件，
父级通过 bindxxx="yyy" 绑定自定义xxx事件监听，触发yyy函数运行（函数里面自带形参，用来接受数据）


微信小程序模块化（es6模块化）
相当于外链的js，只对外暴露部分数据
js中通过module.exports暴露部分数据给外部使用
页面中通过 require("../../mokuai.js") 加载模块内容


模板：写在页面内的组件
页面内通过<template name="xxx"></template>创建xxx模板
通过<template is="xxx"></template>使用xxx模板


引用：写在其他页面内的模板

页面内使用微信的js：
<wxs src="../../wx.wxs" module="wxjs" />
{{wxjs.obj.a}}






